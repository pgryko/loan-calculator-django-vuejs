# .github/workflows/ci.yml
name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  sast:
    runs-on: ubuntu-latest

    steps:
    # Note: GitHub Actions doesn't have direct templates like GitLab.
    # You would need to manually incorporate or script what the `Security/SAST.gitlab-ci.yml` does.
    - name: Checkout code
      uses: actions/checkout@v2

    # Continue with SAST related steps...
  
  test-python:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python 3.11
      uses: actions/setup-python@v2
      with:
        python-version: 3.11

    - name: Print Python version
      run: python3 -V

    - name: Install dependencies
      run: |
        apt update
        apt install -y libmagic1
        cd server
        pip install --upgrade pip wheel setuptools "poetry==1.5.0"
        poetry config virtualenvs.create false
        poetry config virtualenvs.create false && poetry install --no-interaction --no-ansi

    - name: Test and Lint
      run: |
        python manage.py collectstatic
        python -m pytest --junitxml=build/pytest.xml --cov=.
        python manage.py makemigrations --check
        black . --check
        flake8 --ignore=E501, W503, E722, E203 --max-line-length=100 --select=src/
        ls -la

    - name: Upload Test Reports
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: test-reports
        path: server/build/pytest.xml

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: |
          .cache/pip
          venv/
          /root/.cache/pypoetry/
        key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-pip-

